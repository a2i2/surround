version: 2.1
jobs:
  build:
    docker:
      - image: circleci/python:latest
    steps:
      - checkout
      - run:
          name: Prepare image
          command: |
            sudo pip install Flask==1.0.2
  test-python-version:
    parameters:
      version:
        type: string
        default: "latest"
    docker:
      - image: circleci/python:<< parameters.version >>
    steps:
      - checkout
      - run:
          name: Run test for Python << parameters.version >>
          command: |
            sudo python setup.py install
            sudo python setup.py test
            sudo pip3 install pylint==2.2.2
            sudo pip3 install Flask==1.0.2
            sudo pip3 install gunicorn==19.9.0
            pylint setup.py
            find surround/ -iname "*.py" | xargs pylint
            find examples/ -iname "*.py" | xargs pylint
            ls examples/ | xargs -n 1 -I '{}' python examples/'{}'/main.py

  release:
    docker:
      - image: circleci/python:latest
    steps:
      - checkout
      - run:
          name: Release to Pypi
          command: |
            # Install required packages
            python -m pip install --user --upgrade setuptools wheel twine

            # Setup Pypi config
            echo -e "[testpypi]" >> ~/.pypirc
            echo -e "repository:https://test.pypi.org/legacy/" >> ~/.pypirc
            echo -e "username:$PYPI_USERNAME" >> ~/.pypirc
            echo -e "password:$PYPI_PASSWORD" >> ~/.pypirc

            # Build package
            VERSION_TAG=$(git tag -l --points-at HEAD) python setup.py sdist bdist_wheel

            # Upload package for distribution
            python -m twine upload --repository testpypi dist/*

workflows:
  version: 2.1
  test-and-relese:
    jobs:
    - build
    - test-python-version:
        version: "3.6.5"
    - test-python-version
    - release:
        filters:
          tags:
            only: /^([0-9]+)\.([0-9]+)\.([0-9])?$/
          branches:
            ignore: /.*/
